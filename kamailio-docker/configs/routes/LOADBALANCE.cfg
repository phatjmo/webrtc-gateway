#!ifdef WITH_LOADBALANCE
route[LOADBALANCE] {
  #ds_select_dst(destination_set, algorithm) function chooses the destination for the call. For this it can use a lot of algorithms.
  #Alg. 0 is the default one that does the the choosing over the call ID hash
  #Alg. 4 is a Round-Robin
  #Alg. 10 is the one that chooses the destination based on the minimum load of all destinations
  if(!ds_select_dst("0", "4")) {
          #if we are here that means no destination is available. We notify the user by 404 and exit the script.
          xlog("L_NOTICE", "No destination available!");
          send_reply("404", "No destination");
          exit;
  }
  xlog("L_DEBUG", "Routing call to <$ru> via <$du>\n");
  #set the no_reply_recieved timeout to 1 second ... adjust the value to your need
  #note: The first value "0" is invite timeout .. we do not need to change it
  #This means that is the selected media server fails to respond within 2 seconds the failure_route "MANAGE_FAILURE" is called
  #note: this implies that ale the signaling from media servers on the way back to the user goes through the proxy as well
  t_set_fr(0,1000);
  t_on_failure("MANAGE_FAILURE");
  route(RELAY);
  exit;
}

failure_route[MANAGE_FAILURE] {
  xlog("L_NOTICE", "Media server $du failed to answer, selecting other one!");
  if (t_branch_timeout() || !t_branch_replied()) {
    #we mark the destination Inactive and Probing
    ds_mark_dst("ip");
    #select the new destination
    if(ds_next_dst()) {
      #again set local timeout for reply
      t_set_fr(0,2000);
      t_on_failure("MANAGE_FAILURE");
      route(RELAY);
      exit;
    } else {
      #last available node failed to reply, no other destinations available
      send_reply("504", "504 Server Time-out");
      exit;
    }
  }
  xlog("L_INFO", "[$Tf] Failure: $rs\n");
}
#!endif

